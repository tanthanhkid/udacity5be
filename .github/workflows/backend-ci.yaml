name: backend-ci

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up Python environment.
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install pipenv.
      - run: pip install pipenv

      # Install dependencies.
      - run: pipenv install --dev

      # Run the linter.
      - run: pipenv run lint

  test:
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up Python environment.
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install pipenv.
      - run: pip install pipenv

      # Install dependencies.
      - run: pipenv install --dev

      # Run the tests.
      - run: pipenv run test

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up Python environment.
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install pipenv.
      - run: pip install pipenv

      # Install dependencies.
      - run: pipenv install --dev

      # Build the Docker image for the application.
      - run: docker build --tag mp-backend:latest .

      # Run the Docker container.
      - run: docker run -p 5000:5000 --name mp-backend -d mp-backend

      # Check the running application.
      - run: curl http://localhost:5000/movies

      # Send a console message at completion.
      - run: echo "Hello ${{ github.actor }}. Your CI/CD pipeline ran successfully for ${{ github.repository }} at $(date)."
